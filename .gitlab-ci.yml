# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH"

stages:
  - build
  - staging
  - test
  - production

format:
  stage: build
  image: python:3.7.10-slim
  before_script: pip install black
  script: black --check gavel

lint:
  stage: build
  image: python:3.7.10-slim
  before_script: pip install pylint
  script: pylint gavel
  allow_failure: true

prod_deploy:
  stage: production
  image: $EB_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "mainline"'
  environment:
    name: prod
    url: judging.hacktx.com
    action: start
  retry: 1
  before_script:
    - mkdir ~/.aws/
    - touch ~/.aws/credentials
    - 'printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials'
    - mv config.template.yaml config.yaml
    - rm .gitignore
    - mv $CI_ENV_FILE_PROD .env
    - git add .
    - git status
    - ls -al
  script:
    - eb list
    - eb use gavel-prod
    - eb health
    - eb status --verbose
    - eb deploy --staged

prod_stop:
  extends: prod_deploy
  when: manual
  environment:
    name: prod
    url: judging.hacktx.com
    action: stop
  script: eb terminate --force gavel-prod

prod_create:
  extends: prod_deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "mainline"'
      when: manual
      allow_failure: true
    - when: never
  script: eb create gavel-prod -d -c freetail-gavel -r us-east-1 -it t2.micro,t3.micro -im 1 -ix 2 -db.engine postgres -db.i db.t3.micro -db.size 5 -db.user postgres -db.pass $DB_PASSWORD_PROD -db.version 14.2
